<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Ha7Wb1vsAAAAAElFTkSuQmCC
</value>
  </data>
</root>